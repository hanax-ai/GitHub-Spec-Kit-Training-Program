name: Training Progress Tracking

on:
  push:
    branches: [ main ]
    paths: 
      - 'curriculum/**'
      - 'exercises/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'curriculum/**'
      - 'exercises/**'
  workflow_dispatch:
    inputs:
      training_day:
        description: 'Training day to validate (1-5)'
        required: true
        default: '1'
        type: choice
        options:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'

env:
  GITHUB_TOKEN: ${{ secrets.HX_SPEC_KIT_SECRET }}
  HX_TOKEN_VAR: ${{ vars.HX_SPEC_KIT_VAR }}

jobs:
  track-progress:
    runs-on: ubuntu-latest
    name: Track Training Progress
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.HX_SPEC_KIT_SECRET }}
        fetch-depth: 0
    
    - name: Setup Git Configuration
      run: |
        git config --global user.name "hanax-ai"
        git config --global user.email "jarvisr@hana-x.ai"
    
    - name: Analyze Training Progress
      run: |
        echo "📊 Analyzing training progress..."
        
        # Check curriculum completion
        curriculum_files=(
          "curriculum/day1_foundation.md"
          "curriculum/day2_intermediate.md"
          "curriculum/day3_advanced.md"
          "curriculum/day4_complex_projects.md"
          "curriculum/day5_mastery.md"
        )
        
        completed_days=0
        total_days=5
        
        echo "## Training Progress Analysis" > progress_report.md
        echo "**Analysis Date:** $(date)" >> progress_report.md
        echo "" >> progress_report.md
        
        for i in "${!curriculum_files[@]}"; do
          day=$((i + 1))
          file="${curriculum_files[$i]}"
          
          if [ -f "$file" ]; then
            echo "✅ Day $day: Available" >> progress_report.md
            completed_days=$((completed_days + 1))
            
            # Check file size and content quality
            file_size=$(wc -c < "$file")
            if [ $file_size -gt 1000 ]; then
              echo "  📝 Content: Comprehensive ($file_size bytes)" >> progress_report.md
            else
              echo "  ⚠️ Content: Basic ($file_size bytes)" >> progress_report.md
            fi
          else
            echo "❌ Day $day: Missing" >> progress_report.md
          fi
        done
        
        # Calculate completion percentage
        completion_percent=$((completed_days * 100 / total_days))
        echo "" >> progress_report.md
        echo "**Completion Status:** $completed_days/$total_days days ($completion_percent%)" >> progress_report.md
        
        cat progress_report.md
    
    - name: Validate Specific Training Day
      if: github.event.inputs.training_day
      run: |
        day="${{ github.event.inputs.training_day }}"
        echo "🎯 Validating Training Day $day..."
        
        curriculum_file="curriculum/day${day}_*.md"
        exercise_file="exercises/progressive_exercises.md"
        
        if ls $curriculum_file 1> /dev/null 2>&1; then
          echo "✅ Day $day curriculum file exists"
          
          # Validate content structure
          file=$(ls $curriculum_file)
          if grep -q "# Day $day" "$file"; then
            echo "✅ Day $day has proper heading structure"
          else
            echo "⚠️ Day $day heading structure needs review"
          fi
          
          if grep -q "## Learning Objectives" "$file"; then
            echo "✅ Day $day has learning objectives"
          else
            echo "⚠️ Day $day missing learning objectives"
          fi
          
          if grep -q "## Exercises" "$file"; then
            echo "✅ Day $day has exercises section"
          else
            echo "⚠️ Day $day missing exercises section"
          fi
        else
          echo "❌ Day $day curriculum file not found"
          exit 1
        fi
    
    - name: Check Exercise Completion
      run: |
        echo "💪 Checking exercise completion status..."
        
        if [ -f "exercises/progressive_exercises.md" ]; then
          echo "✅ Progressive exercises file exists"
          
          # Count exercise sections
          exercise_count=$(grep -c "### Exercise" exercises/progressive_exercises.md || echo "0")
          echo "📝 Found $exercise_count exercises"
          
          if [ $exercise_count -ge 10 ]; then
            echo "✅ Comprehensive exercise set available"
          elif [ $exercise_count -ge 5 ]; then
            echo "⚠️ Moderate exercise set available"
          else
            echo "❌ Insufficient exercises available"
          fi
        else
          echo "❌ Progressive exercises file missing"
        fi
        
        if [ -f "exercises/validation_checkpoints.md" ]; then
          echo "✅ Validation checkpoints file exists"
          
          # Count checkpoint sections
          checkpoint_count=$(grep -c "### Checkpoint" exercises/validation_checkpoints.md || echo "0")
          echo "🎯 Found $checkpoint_count validation checkpoints"
        else
          echo "❌ Validation checkpoints file missing"
        fi
    
    - name: Generate Progress Badge
      run: |
        echo "🏆 Generating progress badge..."
        
        # Count completed curriculum files
        completed=$(find curriculum -name "day*.md" | wc -l)
        total=5
        
        if [ $completed -eq $total ]; then
          badge_color="brightgreen"
          badge_message="Complete"
        elif [ $completed -ge 3 ]; then
          badge_color="yellow"
          badge_message="In%20Progress"
        else
          badge_color="red"
          badge_message="Starting"
        fi
        
        echo "![Training Progress](https://img.shields.io/badge/Training%20Progress-$badge_message-$badge_color)" > progress_badge.md
        echo "![Days Completed](https://img.shields.io/badge/Days%20Completed-$completed%2F$total-blue)" >> progress_badge.md
        
        cat progress_badge.md
    
    - name: Update Progress Documentation
      run: |
        echo "📝 Updating progress documentation..."
        
        # Create or update PROGRESS.md
        echo "# Training Progress Report" > PROGRESS.md
        echo "" >> PROGRESS.md
        cat progress_badge.md >> PROGRESS.md
        echo "" >> PROGRESS.md
        echo "**Last Updated:** $(date)" >> PROGRESS.md
        echo "" >> PROGRESS.md
        cat progress_report.md >> PROGRESS.md
        
        echo "" >> PROGRESS.md
        echo "## Next Steps" >> PROGRESS.md
        
        # Determine next recommended action
        completed=$(find curriculum -name "day*.md" | wc -l)
        if [ $completed -eq 0 ]; then
          echo "1. 🚀 Start with [Day 1 Foundation](curriculum/day1_foundation.md)" >> PROGRESS.md
        elif [ $completed -lt 5 ]; then
          next_day=$((completed + 1))
          echo "1. 📚 Continue with Day $next_day curriculum" >> PROGRESS.md
        else
          echo "1. 🎯 Complete final validation checkpoints" >> PROGRESS.md
          echo "2. 🏆 Review mastery achievements" >> PROGRESS.md
        fi
        
        cat PROGRESS.md
    
    - name: Upload Progress Report
      uses: actions/upload-artifact@v4
      with:
        name: training-progress-report
        path: |
          progress_report.md
          progress_badge.md
          PROGRESS.md
        retention-days: 90
    
    - name: Comment Progress on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.HX_SPEC_KIT_SECRET }}
        script: |
          const fs = require('fs');
          const progressReport = fs.readFileSync('PROGRESS.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 📊 Training Progress Update\n\n${progressReport}`
          });
